name: L1 contracts CI

on:
  pull_request:

# We need this permissions for this CI to work with external contributions
permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install foundry-zksync
        run: |
          mkdir ./foundry-zksync
          curl -LO https://github.com/matter-labs/foundry-zksync/releases/download/nightly-27360d4c8d12beddbb730dae07ad33a206b38f4b/foundry_nightly_linux_amd64.tar.gz
          tar zxf foundry_nightly_linux_amd64.tar.gz -C ./foundry-zksync
          chmod +x ./foundry-zksync/forge ./foundry-zksync/cast
          echo "$PWD/foundry-zksync" >> $GITHUB_PATH

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.18.0
          cache: yarn

      - name: Install dependencies
        run: yarn

      - name: Build da contracts
        working-directory: da-contracts
        run: |
          yarn build:foundry

      - name: Build l1 contracts
        working-directory: l1-contracts
        run: |
          yarn build:foundry

      - name: Build l2 contracts
        working-directory: l2-contracts
        run: |
          yarn build:foundry

      - name: Build system contracts
        working-directory: system-contracts
        run: |
          yarn install
          yarn build:foundry

      - name: Create cache
        uses: actions/cache/save@v3
        with:
          key: artifacts-l1-${{ github.sha }}
          path: |
            da-contracts/out
            l1-contracts/cache-forge
            l1-contracts/out
            l1-contracts/zkout
            l2-contracts/cache-forge
            l2-contracts/zkout
            system-contracts/zkout

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.18.0
          cache: yarn

      - name: Install dependencies
        run: yarn

      - name: Lint
        run: yarn lint:check

      - name: Lint errors
        run: yarn l1 errors-lint --check

  check-hashes:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.18.0
          cache: yarn
      - name: Install dependencies
        run: yarn

      - name: Restore artifacts cache
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          key: artifacts-l1-${{ github.sha }}
          path: |
            da-contracts/out
            l1-contracts/cache-forge
            l1-contracts/out
            l1-contracts/zkout
            l2-contracts/cache-forge
            l2-contracts/zkout
            system-contracts/zkout

      - name: Check contents
        run: |
          pwd
          ls -R l2-contracts/zkout
          ls -R system-contracts/zkout

      - name: Check hashes
        run: yarn calculate-hashes:check

  test-foundry:
    needs: [build, lint]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.18.0
          cache: yarn

      - name: Install foundry-zksync
        run: |
          mkdir ./foundry-zksync
          curl -LO https://github.com/matter-labs/foundry-zksync/releases/download/nightly-27360d4c8d12beddbb730dae07ad33a206b38f4b/foundry_nightly_linux_amd64.tar.gz
          tar zxf foundry_nightly_linux_amd64.tar.gz -C ./foundry-zksync
          chmod +x ./foundry-zksync/forge ./foundry-zksync/cast
          echo "$PWD/foundry-zksync" >> $GITHUB_PATH

      - name: Install dependencies
        run: yarn

      - name: Restore artifacts cache
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          key: artifacts-l1-${{ github.sha }}
          path: |
            da-contracts/out
            l1-contracts/cache-forge
            l1-contracts/out
            l1-contracts/zkout
            l2-contracts/cache-forge
            l2-contracts/zkout
            system-contracts/zkout

      - name: Run tests
        working-directory: ./l1-contracts
        run: FOUNDRY_PROFILE=default yarn test:foundry

  test-foundry-zksync:
    needs: [build, lint]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.18.0
          cache: yarn

      - name: Install foundry-zksync
        run: |
          mkdir ./foundry-zksync
          curl -LO https://github.com/matter-labs/foundry-zksync/releases/download/nightly-27360d4c8d12beddbb730dae07ad33a206b38f4b/foundry_nightly_linux_amd64.tar.gz
          tar zxf foundry_nightly_linux_amd64.tar.gz -C ./foundry-zksync
          chmod +x ./foundry-zksync/forge ./foundry-zksync/cast
          echo "$PWD/foundry-zksync" >> $GITHUB_PATH

      - name: Install dependencies
        run: yarn

      - name: Build system contract artifacts
        run: yarn sc build:foundry

      - name: Restore artifacts cache
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          key: artifacts-l1-${{ github.sha }}
          path: |
            da-contracts/out
            l1-contracts/cache-forge
            l1-contracts/out
            # TODO: cached `zkout` and the one for tests produce different hashes and so it causes the tests to fail
            l2-contracts/cache-forge
            l2-contracts/zkout
            system-contracts/zkout

      - name: Run tests
        working-directory: ./l1-contracts
        run: FOUNDRY_PROFILE=default yarn test:zkfoundry

  check-verifier-generator-l1:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.72.0

      - name: Install Rust toolchain
        working-directory: tools
        run: rustup toolchain install

      - name: Generate verifiers
        working-directory: tools
        run: cargo run

      - name: Compare L1VerifierPlonk.sol
        run: diff tools/data/VerifierPlonk.sol l1-contracts/contracts/state-transition/verifiers/L1VerifierPlonk.sol

      - name: Compare VerifierFflonk.sol
        run: diff tools/data/VerifierFflonk.sol l1-contracts/contracts/state-transition/verifiers/L1VerifierFflonk.sol

  check-verifier-generator-l2:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.72.0

      - name: Install Rust toolchain
        working-directory: tools
        run: rustup toolchain install

      - name: Generate verifiers
        working-directory: tools
        run: cargo run -- --l2_mode

      - name: Compare L2VerifierPlonk.sol
        run: diff tools/data/VerifierPlonk.sol l1-contracts/contracts/state-transition/verifiers/L2VerifierPlonk.sol

      - name: Compare L2VerifierFflonk.sol
        run: diff tools/data/VerifierFflonk.sol l1-contracts/contracts/state-transition/verifiers/L2VerifierFflonk.sol

  coverage:
    if: false # FIXME: coverage disabled due to stack-too-deep in VerifierFflonk.sol
    defaults:
      run:
        working-directory: l1-contracts
    needs: [build, lint]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.18.0
          cache: yarn

      - name: Install foundry-zksync
        run: |
          mkdir ./foundry-zksync
          curl -LO https://github.com/matter-labs/foundry-zksync/releases/download/nightly-27360d4c8d12beddbb730dae07ad33a206b38f4b/foundry_nightly_linux_amd64.tar.gz
          tar zxf foundry_nightly_linux_amd64.tar.gz -C ./foundry-zksync
          chmod +x ./foundry-zksync/forge ./foundry-zksync/cast
          echo "$PWD/foundry-zksync" >> $GITHUB_PATH

      - name: Install dependencies
        run: yarn

      - name: Restore artifacts cache
        uses: actions/cache/restore@v3
        with:
          fail-on-cache-miss: true
          key: artifacts-l1-${{ github.sha }}
          path: |
            da-contracts/out
            l1-contracts/cache-forge
            l1-contracts/out
            l1-contracts/zkout
            l2-contracts/cache-forge
            l2-contracts/zkout
            system-contracts/zkout

      - name: Run coverage
        run: FOUNDRY_PROFILE=default yarn test:foundry && FOUNDRY_PROFILE=default yarn coverage:foundry --report summary --report lcov

      # Installing the specific version of `lcov` because of
      # the `genhtml: ERROR: line ... of ... has branchcov but no linecov data` error.
      # https://github.com/zgosalvez/github-actions-report-lcov/issues/282
      - name: Install LCOV
        uses: hrishikesh-kadam/setup-lcov@6c1aa0cc9e1c02f9f58f01ac599f1064ccc83470 # v1.1.0
        with:
          ref: v1.16

      # To ignore coverage for certain directories modify the paths in this step as needed. The
      # below default ignores coverage results for the test and script directories. Alternatively,
      # to include coverage in all directories, comment out this step. Note that because this
      # filtering applies to the lcov file, the summary table generated in the previous step will
      # still include all files and directories.
      # The `--rc branch_coverage=1` part keeps branch info in the filtered report, since lcov
      # defaults to removing branch info.
      - name: Filter directories
        run: |
          lcov --ignore-errors unused --remove lcov.info 'test/*' 'contracts/dev-contracts/*' 'lib/*' '../lib/*' 'lib/' 'deploy-scripts/*' --output-file lcov.info --rc branch_coverage=1

      # This step posts a detailed coverage report as a comment and deletes previous comments on
      # each push. The below step is used to fail coverage if the specified coverage threshold is
      # not met. The below step can post a comment (when it's `github-token` is specified) but it's
      # not as useful, and this action cannot fail CI based on a minimum coverage threshold, which
      # is why we use both in this way.
      - name: Post coverage report
        if: github.event_name == 'pull_request' # This action fails when ran outside of a pull request.
        uses: romeovs/lcov-reporter-action@v0.4.0
        with:
          delete-old-comments: true
          lcov-file: ./l1-contracts/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }} # Adds a coverage summary comment to the PR.

      - name: Verify minimum coverage
        uses: zgosalvez/github-actions-report-lcov@df68834145a4a567247d6a3ea8565c4c39d1fd17 # v4.1.23
        with:
          coverage-files: ./l1-contracts/lcov.info
          working-directory: l1-contracts
          minimum-coverage: 83 # TODO(EVM-944): increase threshold to 85


  # FIXME: restore gas report CI
  # gas-report:
  #   needs: [build, lint]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout the repository
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: recursive

  #     - name: Use Foundry
  #       uses: foundry-rs/foundry-toolchain@v1

  #     - name: Use Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18.18.0
  #         cache: yarn

  #     - name: Install dependencies
  #       run: yarn

  #     - name: Restore artifacts cache
  #       uses: actions/cache/restore@v3
  #       with:
  #         fail-on-cache-miss: true
  #         key: artifacts-l1-${{ github.sha }}
  #         path: |
  #           da-contracts/out
  #           l1-contracts/cache-forge
  #           l1-contracts/out
  #           l1-contracts/zkout
  #           l2-contracts/cache-forge
  #           l2-contracts/zkout
  #           system-contracts/zkout

  #     # Add any step generating a gas report to a temporary file named gasreport.ansi. For example:
  #     - name: Run tests
  #       run: yarn l1 test:foundry --gas-report | tee gasreport.ansi # <- this file name should be unique in your repository!

  #     - name: Compare gas reports
  #       uses: Rubilmax/foundry-gas-diff@v3.18
  #       with:
  #         summaryQuantile: 0.0 # only display the 10% most significant gas diffs in the summary (defaults to 20%)
  #         sortCriteria: avg,max # sort diff rows by criteria
  #         sortOrders: desc,asc # and directions
  #         ignore: test-foundry/**/*,l1-contracts/contracts/dev-contracts/**/*,l1-contracts/lib/**/*,l1-contracts/contracts/common/Dependencies.sol
  #       id: gas_diff

  #     - name: Add gas diff to sticky comment
  #       if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
  #       uses: marocchino/sticky-pull-request-comment@v2
  #       with:
  #         # delete the comment in case changes no longer impact gas costs
  #         delete: ${{ !steps.gas_diff.outputs.markdown }}
  #         message: ${{ steps.gas_diff.outputs.markdown }}
